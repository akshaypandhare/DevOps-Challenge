name: Image Build, Push image and deploy in Prod env.

on:
  push:
    branches:
      - master

env: 
  DOCKER_REPO: akshaypandhare
  DOCKER_APP: demo-app
  DOCKER_APP_REPLICA: 2

jobs:

  job-1:
    name: "Test"
    runs-on: [self-hosted, linux]
    steps:  
      - name: "Checkout Repo"
        uses: actions/checkout@v2.1.0
        with:
          fetch-depth: 0

      - name: Testing python code
        run: |
              python3 ./tests/test.py

  job-2:
    name: "Build"
    needs: job-1
    runs-on: [self-hosted, linux]
    outputs:
        output1: ${{ env.tag }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME  }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN  }}

      - name: Docker Build and Tag repo
        run: |
              docker build -t "${{ env.DOCKER_REPO }}/${{ env.DOCKER_APP }}:${GITHUB_SHA::8}" .
              docker push "${{ env.DOCKER_REPO }}/${{ env.DOCKER_APP }}:${GITHUB_SHA::8}"
              echo "tag=${GITHUB_SHA::8}" >> "$GITHUB_ENV"

  job-3:
    name: "Vulnerability scan"
    needs: job-2
    runs-on: [self-hosted, linux]
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.DOCKER_REPO }}/${{ env.DOCKER_APP }}:${{ needs.job-2.outputs.output1 }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  job-4:
    needs: [job-1, job-2, job-3]
    name: "Prod-Deploy"
    runs-on: [self-hosted, linux]
    steps:
      - name: Deploy demo application in docker swarm service.
        run: |
          docker service inspect ${{ env.DOCKER_APP }}
          if [[ $? == 0 ]]; then docker service update ${{ env.DOCKER_APP }} --image ${{ env.DOCKER_REPO }}/${{ env.DOCKER_APP }}:${GITHUB_SHA::8} ; else docker service create --name ${{ env.DOCKER_APP }} --replicas=${{ env.DOCKER_APP_REPLICA }} --env-file .env --publish published=80,target=8000 ${{ env.DOCKER_REPO }}/${{ env.DOCKER_APP }}:${GITHUB_SHA::8} ; fi
